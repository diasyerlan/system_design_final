upstream reels_backend {
    server reels-service-1:3000;
    server reels-service-2:3000;
    ip_hash;
}

upstream websocket_backend {
    server ws-shard-1:4000;
    server ws-shard-2:4000;
    hash $remote_addr consistent;
}

upstream cdn_backend {
    server cdn-service:5000;
}

# Cache configuration
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cdn_cache:10m max_size=10g inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name localhost;

    # CDN for media content
    location ~* ^/cdn/(.*)$ {
        proxy_pass http://cdn_backend/public/$1;
        proxy_cache cdn_cache;
        proxy_cache_valid 200 302 1d;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        proxy_cache_background_update on;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        expires max;
        access_log off;
    }

    location /api/reels {
        proxy_pass http://reels_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ws {
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        return 404;
    }
} 